on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # SonarQube 분석 후 JSON 생성 (예시)
      - name: Fetch SonarQube Issues
        run: |
          echo '{"issues": [{"id":1,"severity":"MAJOR"}]}' > sonar_issues.json

      # ChatGPT API 호출 (분석 요약)
      - name: Analyze with ChatGPT
        id: analyze
        run: |
          # 1) 파일 업로드
          FILE_RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/files" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -F "purpose=assistants" \
            -F "file=@sonar_issues.json")

          FILE_ID=$(echo "$FILE_RESPONSE" | jq -r '.id')

          # 2) Responses API 호출 (파일 참조)
          RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/responses" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"model\": \"gpt-4.1-mini\",
              \"input\": \"첨부된 SonarQube 분석 JSON을 요약하고, 주요 품질 문제와 상태를 간단히 설명해줘.\",
              \"input_files\": [ { \"file_id\": \"$FILE_ID\" } ]
            }")

          SUMMARY=$(echo "$RESPONSE" | jq -r '.output[0].content[0].text')
          echo "SUMMARY<<EOF" >> $GITHUB_ENV
          echo "$SUMMARY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # Slack으로 결과 전송
      - name: Send Summary to Slack
        run: |
          curl -X POST https://slack.com/api/chat.postMessage \
            -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
            -H "Content-type: application/json" \
            --data "{
              \"channel\": \"${{ secrets.SLACK_CHANNEL_ID }}\",
              \"text\": \"SonarQube Analysis Summary:\n${SUMMARY}\"
            }"

