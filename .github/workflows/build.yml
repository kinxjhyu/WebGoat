name: SonarQube + ChatGPT + Slack Notify

on:
  workflow_dispatch:

jobs:
  analyze-and-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Run SonarQube scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey=WebGoat \
            -Dsonar.host.url=http://sonarqube.kinxcloud.co.kr:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Get SonarQube Issues JSON
        run: |
          curl -u ${{ secrets.SONAR_USER }}:${{ secrets.SONAR_PASS }} \
            "http://sonarqube.kinxcloud.co.kr:9000/api/issues/search?componentKeys=WebGoat&ps=10" \
            -o sonar_issues.json

      - name: Ask ChatGPT (in Korean)
        id: chatgpt
        run: |
          PROMPT="이 SonarQube 결과를 한국어로 분석하고 요약해줘:\n$(cat sonar_issues.json)"
          
          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d "{
              \"model\": \"gpt-5\",
              \"messages\": [
                {\"role\": \"system\", \"content\": \"모든 답변은 반드시 한국어로 작성해 주세요.\"},
                {\"role\": \"user\", \"content\": \"$PROMPT\"}
              ]
            }" | jq -r '.choices[0].message.content')

          echo "ChatGPT Response: $RESPONSE"
          echo "response=$RESPONSE" >> $GITHUB_ENV

      - name: Send to Slack
        run: |
          curl -X POST \
            -H "Content-type: application/json" \
            -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
            --data "{
              \"channel\": \"#sonarqube\",
              \"text\": \"${{ env.response }}\"
            }" \
            https://slack.com/api/chat.postMessage

            #
